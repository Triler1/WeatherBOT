import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text

import pymongo
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime

import pymorphy2
from apscheduler.schedulers.asyncio import AsyncIOScheduler

WEATHER_TOKEN = '<WEATHER-TOKEN>'
API_TOKEN = '<BOT-TOKEN>'

client = pymongo.MongoClient('MONGO(')
db = client.test
coll = db.users

bot = Bot(bot_token)
dp = Dispatcher(bot)

morph = pymorphy2.MorphAnalyzer()

notifications = False
current = False

ct = ''
weather = ''
emoji = ''
dir = ''
save_city = ''
value = ''
declination = ''

kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb.add(KeyboardButton('–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞'))
kb.add(KeyboardButton("–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"))
kb.add(KeyboardButton("üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"))
kb.add(KeyboardButton('üíµ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞'))

kb1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb1.add(KeyboardButton('–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞'))
kb1.add(KeyboardButton("–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"))
kb1.add(KeyboardButton('üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'))
kb1.add(KeyboardButton('üíµ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞'))

ikb = InlineKeyboardMarkup(row_width=3)

ikb.add(InlineKeyboardButton(text='1', callback_data='1'))
ikb.insert(InlineKeyboardButton(text='2', callback_data='2'))
ikb.insert(InlineKeyboardButton(text='3', callback_data='3'))

ikb1 = InlineKeyboardMarkup(row_width=1)

ikb1.add(InlineKeyboardButton(text='DonationAlerts', url="https://www.donationalerts.com/r/triler2"))

scheduler = AsyncIOScheduler()
scheduler.start()

async def on_startup(dispatcher):
    for value in coll.find():
        break

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start_command(msg: types.message):
    global value
    global notifications
    value = ''
    for value in coll.find({"chat_id": msg.from_user.id}):
        notifications = value['city']
    await bot.send_sticker(msg.from_user.id, "CAACAgIAAxkBAAM9YXfH5sCS-41cwfqE5wF6I25R3U4AAqkRAALI5XFJY-8zAfzb5vghBA")
    if (value == ''):
        coll.insert_one({"chat_id": msg.from_user.id, "city": save_city, "ct": False, "schedule": "", "number": 0, "forecast": False})
    if (notifications == ""):
        await bot.send_message(msg.from_user.id, text=f"<b>‚úåÔ∏è –ü—Ä–∏–≤–µ—Ç {msg.from_user.first_name}</b>, —è ü§ñ <b>–ü–æ–≥–æ–¥–Ω—ã–π –ë–æ—Ç</b>!\n–Ø –º–æ–≥—É —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é.", reply_markup=kb, parse_mode='HTML')
    else:
        await bot.send_message(msg.from_user.id, text=f"‚úåÔ∏è –ü—Ä–∏–≤–µ—Ç <b>{msg.from_user.first_name}</b>, —è ü§ñ <b>–ü–æ–≥–æ–¥–Ω—ã–π –ë–æ—Ç</b>! –Ø –º–æ–≥—É —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é.", reply_markup=kb1, parse_mode='HTML')

@dp.message_handler(Text(equals="–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞"))
async def current_weather(message: types.message):
    await bot.send_message(chat_id=message.from_user.id, text="<i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É:</i>", parse_mode='html')
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"ct": True}})

@dp.message_handler(Text(equals="–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"))
async def schedule_weather(message: types.message):
    await bot.send_message(chat_id=message.from_user.id, text="<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø—Ä–æ–≥–Ω–æ–∑–∞:</i>", reply_markup=ikb, parse_mode='html')

@dp.message_handler(Text(equals="üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"))
async def schedule_weather(message: types.message):
  for ct in coll.find({"chat_id": message.from_user.id}):
    if (ct['city'] == ""):
        await bot.send_message(chat_id=message.from_user.id, text="<i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:</i>", parse_mode='html')
        coll.update_one({"chat_id": message.from_user.id}, {"$set": {"city": "process"}})
    elif (ct['city'] == "process"):
        await bot.send_message(chat_id=message.from_user.id, text="<i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:</i>", parse_mode='html')
    else:
        await bot.send_message(chat_id=message.from_user.id, text=f"<i>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ.</i>", reply_markup=kb1)

@dp.message_handler(Text(equals="üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"))
async def schedule_weather(message: types.message):
  for ct in coll.find({"chat_id": message.from_user.id}):
    notifications = ct['city']
  if (notifications != "" and notifications != "process"):
    scheduler.remove_job(f"{ct['schedule']}")
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"city": ""}})
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"schedule": ""}})
    await bot.send_message(chat_id=message.from_user.id, text=f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ.", reply_markup=kb)
  else:
    await bot.send_message(chat_id=message.from_user.id, text=f"–í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.", reply_markup=kb)

@dp.message_handler(Text(equals="üíµ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞"))
async def buy(message: types.message):
    await bot.send_message(message.chat.id, 'üìà –ö–∞–∂–¥—ã–π –¥–æ–Ω–∞—Ç –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç', reply_markup=ikb1)
    
@dp.callback_query_handler(text='1')
async def callback(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"number": 1}})
    await bot.send_message(chat_id=message.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:")
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"forecast": True}})

@dp.callback_query_handler(text='2')
async def callback(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"number": 2}})
    await bot.send_message(chat_id=message.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:")
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"forecast": True}})

@dp.callback_query_handler(text='3')
async def callback(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"number": 3}})
    await bot.send_message(chat_id=message.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:")
    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"forecast": True}})

@dp.message_handler()
async def e(message: types.message):
    global notifications
    global ct
    global current
    async def save_weather():
        request = requests.get(f"http://api.weatherapi.com/v1/current.json?key={weather_token}&q={save_city}&lang=ru")
        weather = request.json()
        global emoji
        global dir
        if (weather['current']['condition']['text'] == '–Ø—Å–Ω–æ'):
            emoji = 'üåï'
        elif (weather['current']['condition']['text'] == '–°–æ–ª–Ω–µ—á–Ω–æ'):
            emoji = '‚òÄÔ∏è'
        elif (weather['current']['condition']['text'] == '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å'):
            emoji = '‚õÖÔ∏è'
        elif (weather['current']['condition']['text'] == '–û–±–ª–∞—á–Ω–æ'):
            emoji = 'üå•'
        elif (weather['current']['condition']['text'] == '–ü–∞—Å–º—É—Ä–Ω–æ'):
            emoji = '‚òÅÔ∏è'
        elif (weather['current']['condition']['text'] == '–î—ã–º–∫–∞' or weather['current']['condition']['text'] == '–¢—É–º–∞–Ω' or weather['current']['condition']['text'] == '–ü–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω'):
            emoji = 'üå´'
        elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–ó–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω–∞—è –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–ª–∞–±—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–µ–≤—ã–µ –¥–æ–∂–¥–∏ —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å'):
            emoji = 'üåß'
        elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ü–æ–∑–µ–º–æ–∫' or weather['current']['condition']['text'] == '–ú–µ—Ç–µ–ª—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π' or weather['current']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π'):
            emoji = 'üå®'
        elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –≥—Ä–æ–∑—ã'):
            emoji = 'üå©'
        else:
            emoji = '‚õà'
        if (weather['current']['wind_dir'] == 'SW'
          or weather['current']['wind_dir'] == 'SSW'
          or weather['current']['wind_dir'] == 'WSW'):
            dir = '–Æ–ó'
        elif (weather['current']['wind_dir'] == 'NNE'
            or weather['current']['wind_dir'] == 'NE'
            or weather['current']['wind_dir'] == 'ENE'):
            dir = '–°–í'
        elif (weather['current']['wind_dir'] == 'ESE'
            or weather['current']['wind_dir'] == 'SE'
            or weather['current']['wind_dir'] == 'SSE'):
            dir = '–Æ–í'
        else:
            dir = '–°–ó'
        word = morph.parse(weather['location']['name'])[0]
        loct = word.inflect({'loct'})
        await bot.send_message(chat_id=message.from_user.id, text=
      f"–ü–æ–≥–æ–¥–∞ –≤ <b><i>{loct.word.title()}</i></b>.\n{emoji} {weather['current']['condition']['text']}:\n"
      f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {round(weather['current']['temp_c'])}¬∞C,\n"
      f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(weather['current']['wind_kph'] * 1000 / 3600)} –º/c,\n"
      f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å {weather['current']['humidity']}%.\n"
      f"üß≠ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {dir}", parse_mode="HTML")
    for ct in coll.find({"chat_id": message.from_user.id}):
        current = ct['ct']
        notifications = ct['city']
    if (current):
        try:
            city = message.text
            request = requests.get(f"http://api.weatherapi.com/v1/current.json?key={weather_token}&q={city}&lang=ru")
            weather = request.json()
            global emoji
            global dir
            global morph
            if (weather['current']['condition']['text'] == '–Ø—Å–Ω–æ'):
                emoji = 'üåï'
            elif (weather['current']['condition']['text'] == '–°–æ–ª–Ω–µ—á–Ω–æ'):
                emoji = '‚òÄÔ∏è'
            elif (weather['current']['condition']['text'] == '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å'):
                emoji = '‚õÖÔ∏è'
            elif (weather['current']['condition']['text'] == '–û–±–ª–∞—á–Ω–æ'):
                emoji = 'üå•'
            elif (weather['current']['condition']['text'] == '–ü–∞—Å–º—É—Ä–Ω–æ'):
                emoji = '‚òÅÔ∏è'
            elif (weather['current']['condition']['text'] == '–î—ã–º–∫–∞' or weather['current']['condition']['text'] == '–¢—É–º–∞–Ω' or weather['current']['condition']['text'] == '–ü–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω'):
                emoji = 'üå´'
            elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–ó–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω–∞—è –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–ª–∞–±—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–µ–≤—ã–µ –¥–æ–∂–¥–∏ —Å–æ —Å–Ω–µ–≥–æ–º' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å'):
                emoji = 'üåß'
            elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ü–æ–∑–µ–º–æ–∫' or weather['current']['condition']['text'] == '–ú–µ—Ç–µ–ª—å' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or weather['current']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π' or weather['current']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π'):
                emoji = 'üå®'
            elif (weather['current']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –≥—Ä–æ–∑—ã'):
                emoji = 'üå©'
            else:
                emoji = '‚õà'
            if (weather['current']['wind_dir'] == 'SW'
          or weather['current']['wind_dir'] == 'SSW'
          or weather['current']['wind_dir'] == 'WSW'):
                dir = '–Æ–ó'
            elif (weather['current']['wind_dir'] == 'NNE'
            or weather['current']['wind_dir'] == 'NE'
            or weather['current']['wind_dir'] == 'ENE'):
                dir = '–°–í'
            elif (weather['current']['wind_dir'] == 'ESE'
            or
            weather['current']['wind_dir'] == 'SE'
            or weather['current']['wind_dir'] == 'SSE'):
                dir = '–Æ–í'
            else:
                dir = '–°–ó'
            word = morph.parse(weather['location']['name'])[0]
            loct = word.inflect({'loct'})
            if (notifications == "process" or notifications == ""):
                await bot.send_message(chat_id=message.from_user.id, text=
          f"–ü–æ–≥–æ–¥–∞ –≤ <b><i>{loct.word.title()}</i></b>.\n{emoji} {weather['current']['condition']['text']}:\n"
          f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {round(weather['current']['temp_c'])}¬∞C,\n"
          f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(weather['current']['wind_kph'] * 1000 / 3600)} –º/c,\n"
          f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å {weather['current']['humidity']}%.\n"
          f"üß≠ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {dir}", reply_markup=kb, parse_mode="HTML")
            else:
                await bot.send_message(chat_id=message.from_user.id, text=
          f"–ü–æ–≥–æ–¥–∞ –≤ <b><i>{loct.word.title()}</i></b>.\n{emoji} {weather['current']['condition']['text']}:\n"
          f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {round(weather['current']['temp_c'])}¬∞C,\n"
          f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(weather['current']['wind_kph'] * 1000 / 3600)} –º/c,\n"
          f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å {weather['current']['humidity']}%.\n"
          f"üß≠ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {dir}", reply_markup=kb1, parse_mode="HTML")
            ct = ''
            current = False
            coll.update_one({"chat_id": message.from_user.id}, {"$set": {"ct": False}})
        except KeyError:
            await message.answer(text="‚úñÔ∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
    elif (notifications == "process"):
        save_city = message.text
        request = requests.get(f"http://api.weatherapi.com/v1/current.json?key={weather_token}&q={save_city}&lang=ru")
        weather = request.json()
        try:
            if (weather['error']['code'] == 1006):
                await message.answer(text="‚úñÔ∏è–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
        except KeyError:
            for i in range(100):
                schedule = f'weather{i}'
                for ct in coll.find({"schedule": schedule}):
                    schedule = f'weather{i}'
                if (ct['schedule'] != schedule):
                    scheduler.add_job(save_weather, 'cron', hour=5, start_date=datetime.now(), id=f"{schedule}")
                    notifications = False
                    await bot.send_message(chat_id=message.from_user.id, text="‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ –≤–∫–ª—é—á–µ–Ω–æ.\nüïó –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è 8:00 –ø–æ –ú–°–ö.", reply_markup=kb1)
                    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"city": save_city}})
                    coll.update_one({"chat_id": message.from_user.id}, {"$set": {"schedule": schedule}})
                    break
    elif (ct['forecast']):
        try:
            city = message.text
            request = requests.get(f"http://api.weatherapi.com/v1/forecast.json?key={weather_token}&q={city}&days={ct['number']}&lang=ru")
            weather = request.json()
            word = morph.parse(weather['location']['name'])[0]
            loct = word.inflect({'loct'})
            global declination
            if (ct['number'] == 1):
                declination = '–¥–µ–Ω—å'
            else:
                declination = '–¥–Ω—è'
            await bot.send_message(chat_id=message.from_user.id, text=f"–ü–æ–≥–æ–¥–∞ –≤ <b>{loct.word.title()}</b> –Ω–∞ {ct['number']} {declination}:", parse_mode="HTML")
            for i in weather['forecast']['forecastday']:
                if (i['day']['condition']['text'] == '–Ø—Å–Ω–æ'):
                    emoji = 'üåï'
                elif (i['day']['condition']['text'] == '–°–æ–ª–Ω–µ—á–Ω–æ'):
                    emoji = '‚òÄÔ∏è'
                elif (i['day']['condition']['text'] == '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å'):
                    emoji = '‚õÖÔ∏è'
                elif (i['day']['condition']['text'] == '–û–±–ª–∞—á–Ω–æ'):
                    emoji = 'üå•'
                elif (i['day']['condition']['text'] == '–ü–∞—Å–º—É—Ä–Ω–æ'):
                    emoji = '‚òÅÔ∏è'
                elif (i['day']['condition']['text'] == '–î—ã–º–∫–∞' or weather['current']['condition']['text'] == '–¢—É–º–∞–Ω' or weather['current']['condition']['text'] == '–ü–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω'):
                    emoji = 'üå´'
                elif (i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or i['day']['condition']['text'] == '–°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å' or i['day']['condition']['text'] == '–ó–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or i['day']['condition']['text'] == '–°–∏–ª—å–Ω–∞—è –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–í—Ä–µ–º–µ–Ω–∞–º–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–°–ª–∞–±—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–µ–≤—ã–µ –¥–æ–∂–¥–∏ —Å–æ —Å–Ω–µ–≥–æ–º' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å'):
                    emoji = 'üåß'
                elif (i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ü–æ–∑–µ–º–æ–∫' or i['day']['condition']['text'] == '–ú–µ—Ç–µ–ª—å' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or i['day']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π' or i['day']['condition']['text'] == '–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π'):
                    emoji = 'üå®'
                elif (i['day']['condition']['text'] == '–ú–µ—Å—Ç–∞–º–∏ –≥—Ä–æ–∑—ã'):
                    emoji = 'üå©'
                else:
                    emoji = '‚õà'
                await bot.send_message(chat_id=message.from_user.id, text=f"<b><i>{i['date']}</i></b>.\n{emoji} {i['day']['condition']['text']}:\n"
                    f"üå° –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {round(i['day']['avgtemp_c'])}¬∞C,\n"
                    f"üí® –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(i['day']['maxwind_kph'] * 1000 / 3600)} –º/c,\n"
                    f"üíß –°—Ä–µ–¥–Ω—è—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å {round(i['day']['avghumidity'])}%.", parse_mode="HTML")
            ct = ''
            current = False
            coll.update_one({"chat_id": message.from_user.id}, {"$set": {"forecast": False}})
        except KeyError:
            await message.answer(text="‚úñÔ∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
    else:
        if (notifications == ""):
            await bot.send_message(chat_id=message.from_user.id, text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.", reply_markup=kb)
        else:
            await bot.send_message(chat_id=message.from_user.id, text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.", reply_markup=kb1)

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)



if __name__ == '__main__':
    executor.start_polling(dp)
